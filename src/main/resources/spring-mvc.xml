<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- springmvc 扫描控制层的包，比如@Controller这些注解 扫描控制层的注解，方案1 指定具体扫描的包，方案2 指定扫描父包，必须use-default-filters="false"， 
		否则事务会不起作用 -->
	<!-- <context:component-scan base-package="com.qianfeng.controller"> -->
	<context:component-scan base-package="com.qfedu"
		use-default-filters="false">
		<!-- 指定扫描的注解 -->
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 使用指定的验证器 -->
	<mvc:annotation-driven>
		<mvc:path-matching suffix-pattern="false"/>
		
			 <!-- 处理json里的日期数据，默认日期被fastjson转为时间戳数据 -->
  	<mvc:message-converters >  
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
                <property name="objectMapper">  
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">  
                        <property name="dateFormat">  
                            <bean class="java.text.SimpleDateFormat">  
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />  
                            </bean>  
                        </property>  
                    </bean>  
                </property>  
            </bean>  
        </mvc:message-converters>
	</mvc:annotation-driven>


	<mvc:resources location="/" mapping="/**"></mvc:resources>

	<!-- 视图解析器 跳转到相关jsp的资源时，只写资源的名字就可以 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 前缀 -->
		<property name="prefix" value="/"></property>
		<!-- 后缀 -->
		<property name="suffix" value=".jsp"></property>
	</bean>

	 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
   		<!-- 上传文件的最大大小 ，单位字节 ，比如 1024 * 1024 = 1M-->
   		<property name="maxUploadSize" value="1048576"></property>
   
   	</bean>
	

	<!-- shiro相关 -->
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor"
		class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- 生成代理，通过代理进行控制 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />

	<!-- 开启Shiro注解,必须放在springmvc的配置文件中 -->
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- 注解方式下的异常处理，身份认证异常处理、权限认证异常处理 -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!--登录异常，跳转到login.jsp -->
				<!-- <prop key="org.apache.shiro.authz.UnauthenticatedException"> /login 
					</prop> -->
				<!-- 授权异常，跳转到unauthorized.jsp -->
				<prop key="org.apache.shiro.authz.UnauthorizedException">/unauthorized</prop>
			</props>
		</property>
	</bean>

</beans>